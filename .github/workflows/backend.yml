name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      ## 🔥 환경별 설정 파일 생성 (기존 파일이 있으면 삭제 후 생성)
      - name: Create application.yml files
        run: |
          cd ./src/main/resources
          
          for FILE in application-database.yml application-payment.yml application-redis.yml application-s3.yml application-mail.yml
          do
            if [ -f "$FILE" ]; then
              rm "$FILE"  # 기존 파일 삭제
            fi
            touch "$FILE"  # 새로운 파일 생성
          done
          
          # GitHub Secrets에서 값 불러와서 추가
          echo "${{ secrets.DATABASE }}" >> application-database.yml
          echo "${{ secrets.PAYMENT }}" >> application-payment.yml
          echo "${{ secrets.REDIS }}" >> application-redis.yml
          echo "${{ secrets.S3 }}" >> application-s3.yml
          echo "${{ secrets.MAIL }}" >> application-mail.yml
        shell: bash

      - name: Build with Gradle
        run: |
          chmod +x gradlew 
          ./gradlew build
      # 웹 이미지 빌드 및 도커허브에 push
      - name: docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} . 
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
      ## docker compose up
      - name: docker compose up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            docker-compose up -d
            sudo docker image prune -f
          
